// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  phone     String?
  lastLogin DateTime @default(now())
  createdAt DateTime @default(now())
  role      String   @default("user")

  resetPasswordToken     String?
  resetPasswordExpiresAt DateTime?

  order Order[]
}

model Address {
  id        String   @id @default(uuid())
  region    String
  town      String
  landmark  String?
  createdAt DateTime @default(now())

  Order Order[]
}

model Product {
  id           String      @id @default(uuid())
  name         String
  price        Decimal
  out_of_stock Boolean     @default(false)
  discount     Decimal     @default(0)
  stock        Int         @default(0)
  image        String      @default("https://placehold.co/600x400")
  OrderItem    OrderItem[]
}

enum OrderStatus {
  PROCESSING
  COMPLETED
  SHIPPED
}

model Order {
  id        String      @id @default(uuid())
  total     Decimal
  status    OrderStatus @default(PROCESSING)
  paid      Boolean     @default(false)
  createdAt DateTime    @default(now())

  items     OrderItem[]
  address   Address     @relation(fields: [addressId], references: [id])
  addressId String
  User      User?       @relation(fields: [userId], references: [id])
  userId    String?
}

model OrderItem {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  orderId  String
  order    Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product  Product @relation(fields: [productId], references: [id])
  quantity Int

  productId String
}
